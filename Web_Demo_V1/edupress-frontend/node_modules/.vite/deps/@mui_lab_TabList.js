import {
  Tabs_default
} from "./chunk-7BHVRHOU.js";
import "./chunk-MPTYHCEE.js";
import "./chunk-R4KYFCW2.js";
import "./chunk-QYOT5ZM2.js";
import {
  _objectWithoutPropertiesLoose
} from "./chunk-YR5LAKKR.js";
import "./chunk-T2SWDQEL.js";
import {
  getPanelId,
  getTabId,
  useTabContext
} from "./chunk-JP3XMHUG.js";
import "./chunk-NHW7ZGZI.js";
import "./chunk-2Q5YBX2Q.js";
import "./chunk-CKJ2PWKF.js";
import "./chunk-QSOHNWNG.js";
import "./chunk-QRHR4M3P.js";
import "./chunk-UCSTW5FF.js";
import "./chunk-2MS5CSNK.js";
import "./chunk-CYIRZBAY.js";
import {
  require_prop_types
} from "./chunk-GHSBTL5H.js";
import {
  require_jsx_runtime
} from "./chunk-KBTYAULA.js";
import "./chunk-GGWHAXMM.js";
import "./chunk-FOH2F53G.js";
import {
  _extends
} from "./chunk-6OH4ZUWO.js";
import "./chunk-JH7Y3LKN.js";
import {
  require_react
} from "./chunk-QCHXOAYK.js";
import {
  __toESM
} from "./chunk-WOOG5QLI.js";

// node_modules/@mui/lab/TabList/TabList.js
var React = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());
var import_jsx_runtime = __toESM(require_jsx_runtime());
var _excluded = ["children"];
var TabList = React.forwardRef(function TabList2(props, ref) {
  const {
    children: childrenProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);
  const context = useTabContext();
  if (context === null) {
    throw new TypeError("No TabContext provided");
  }
  const children = React.Children.map(childrenProp, (child) => {
    if (!React.isValidElement(child)) {
      return null;
    }
    return React.cloneElement(child, {
      // SOMEDAY: `Tabs` will set those themselves
      "aria-controls": getPanelId(context, child.props.value),
      id: getTabId(context, child.props.value)
    });
  });
  return (0, import_jsx_runtime.jsx)(Tabs_default, _extends({}, other, {
    ref,
    value: context.value,
    children
  }));
});
true ? TabList.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A list of `<Tab />` elements.
   */
  children: import_prop_types.default.node
} : void 0;
var TabList_default = TabList;
export {
  TabList_default as default
};
//# sourceMappingURL=@mui_lab_TabList.js.map
